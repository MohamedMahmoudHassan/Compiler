S
Out
In

In
Normal ; In
Special In
eps

Out
func identifier ( ExpS ) { In }

Normal
Comparison
Assignment
Decleration
ExpS
return ExpS

Comparison
ExpS ComparisonCmp

ComparisonCmp
compop ExpS
eps

ExpS
Val Exp

Exp
Expop ExpS
eps

Val
identifier
const

Assiop
assop
=

Expop
arithop
logicop

Special
if IfBody
while ( Comparison ) GBody
do { In } while ( Comparison ) ;
for ( ExpS ; Comparison ; ExpS ) GBody

IfBody
( Comparison ) GBody IfComp

GBody
{ In }
Normal ;
Special

IfComp
elseif IfBody
else GBody
eps

$
decleration = assignment
identifier assop assignment

assignment
identifier
identifier assop assignment
identifier assop val
identifier
