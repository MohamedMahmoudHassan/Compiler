S
Out
In

In
Normal ; In
Special In
eps

Out
func identifier ( ExpS ) { In }

Normal
identifier OpIdentifier
const OpConst
Decleration
return ExpS

OpIdentifier
Assignment
Comparison
Exp

OpConst
Comparison
Exp

Comparison
compop Val Exp

Assignment
= identifier

Exp
Expop Val OpConst
eps

Val
identifier
const

Assiop
assop
=

Expop
arithop
logicop

Special
if IfBody
while ( OpConst ) GBody
do { In } while ( OpConst ) ;
for ( ExpS ; OpConst ; ExpS ) GBody

IfBody
( OpConst ) GBody IfComp

GBody
{ In }
Normal ;
Special

IfComp
elseif IfBody
else GBody
eps

$
decleration = assignment
identifier assop assignment

assignment
identifier
identifier assop assignment
identifier assop val
identifier
