S
Out
In

In
Normal ; In
Special In
; In
eps

Out
func identifier ( Exp ) { In } S

Normal
Decleration
OpDecleration
return OpDecleration

Decleration
datatype identifier AssDecleration

AssDecleration
= OpDecleration
eps

OpDecleration
identifier OpIdentifier
const OpConst


OpIdentifier
Assignment
Comparison
Exp

Assignment
Assop OpDecleration

Comparison
compop Val Exp

Exp
Expop Val OpConst
eps

OpConst
Comparison
Exp

Val
identifier
const

Assop
assop
=

Expop
arithop
logicop

Special
if IfBody
while ( OpDecleration ) GBody
do { In } while ( OpDecleration ) ;
for ( ForParm1 ; FormParm2 ; FormParm2 ) GBody

FormParm2
OpDecleration
eps

ForParm1
Decleration
FormParm2

IfBody
( OpDecleration ) GBody IfComp

GBody
{ In }
Normal ;
Special
;

IfComp
elseif IfBody
else GBody
eps

$
